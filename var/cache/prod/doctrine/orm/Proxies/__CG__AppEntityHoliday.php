<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Holiday extends \App\Entity\Holiday implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'rowid', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'entity', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'fkUser', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'fkUserCreate', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'fkType', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'dateCreate', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'dateDebut', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'dateFin', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'halfday', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'statut', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'fkValidator', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'dateValid', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'fkUserValid', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'dateRefuse', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'fkUserRefuse', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'dateCancel', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'fkUserCancel', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'detailRefuse', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'notePrivate', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'notePublic', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'tms', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'vue', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'dateDernierRetardement', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'nbRetartement', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'nbDays'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'rowid', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'entity', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'fkUser', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'fkUserCreate', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'fkType', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'dateCreate', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'dateDebut', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'dateFin', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'halfday', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'statut', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'fkValidator', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'dateValid', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'fkUserValid', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'dateRefuse', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'fkUserRefuse', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'dateCancel', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'fkUserCancel', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'detailRefuse', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'notePrivate', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'notePublic', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'tms', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'vue', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'dateDernierRetardement', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'nbRetartement', '' . "\0" . 'App\\Entity\\Holiday' . "\0" . 'nbDays'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Holiday $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getRowid(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getRowid();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRowid', []);

        return parent::getRowid();
    }

    /**
     * {@inheritDoc}
     */
    public function getEntity(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntity', []);

        return parent::getEntity();
    }

    /**
     * {@inheritDoc}
     */
    public function setEntity(int $entity): \App\Entity\Holiday
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEntity', [$entity]);

        return parent::setEntity($entity);
    }

    /**
     * {@inheritDoc}
     */
    public function getFkUser(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFkUser', []);

        return parent::getFkUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setFkUser(int $fkUser): \App\Entity\Holiday
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFkUser', [$fkUser]);

        return parent::setFkUser($fkUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getFkUserCreate(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFkUserCreate', []);

        return parent::getFkUserCreate();
    }

    /**
     * {@inheritDoc}
     */
    public function setFkUserCreate(?int $fkUserCreate): \App\Entity\Holiday
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFkUserCreate', [$fkUserCreate]);

        return parent::setFkUserCreate($fkUserCreate);
    }

    /**
     * {@inheritDoc}
     */
    public function getFkType(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFkType', []);

        return parent::getFkType();
    }

    /**
     * {@inheritDoc}
     */
    public function setFkType(int $fkType): \App\Entity\Holiday
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFkType', [$fkType]);

        return parent::setFkType($fkType);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateCreate(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateCreate', []);

        return parent::getDateCreate();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateCreate(\DateTimeInterface $dateCreate): \App\Entity\Holiday
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateCreate', [$dateCreate]);

        return parent::setDateCreate($dateCreate);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription(string $description): \App\Entity\Holiday
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateDebut(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateDebut', []);

        return parent::getDateDebut();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateDebut(\DateTimeInterface $dateDebut): \App\Entity\Holiday
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateDebut', [$dateDebut]);

        return parent::setDateDebut($dateDebut);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateFin(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateFin', []);

        return parent::getDateFin();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateFin(\DateTimeInterface $dateFin): \App\Entity\Holiday
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateFin', [$dateFin]);

        return parent::setDateFin($dateFin);
    }

    /**
     * {@inheritDoc}
     */
    public function getHalfday(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHalfday', []);

        return parent::getHalfday();
    }

    /**
     * {@inheritDoc}
     */
    public function setHalfday(?int $halfday): \App\Entity\Holiday
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHalfday', [$halfday]);

        return parent::setHalfday($halfday);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatut(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatut', []);

        return parent::getStatut();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatut(int $statut): \App\Entity\Holiday
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatut', [$statut]);

        return parent::setStatut($statut);
    }

    /**
     * {@inheritDoc}
     */
    public function getFkValidator(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFkValidator', []);

        return parent::getFkValidator();
    }

    /**
     * {@inheritDoc}
     */
    public function setFkValidator(int $fkValidator): \App\Entity\Holiday
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFkValidator', [$fkValidator]);

        return parent::setFkValidator($fkValidator);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateValid(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateValid', []);

        return parent::getDateValid();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateValid(?\DateTimeInterface $dateValid): \App\Entity\Holiday
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateValid', [$dateValid]);

        return parent::setDateValid($dateValid);
    }

    /**
     * {@inheritDoc}
     */
    public function getFkUserValid(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFkUserValid', []);

        return parent::getFkUserValid();
    }

    /**
     * {@inheritDoc}
     */
    public function setFkUserValid(?int $fkUserValid): \App\Entity\Holiday
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFkUserValid', [$fkUserValid]);

        return parent::setFkUserValid($fkUserValid);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateRefuse(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateRefuse', []);

        return parent::getDateRefuse();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateRefuse(?\DateTimeInterface $dateRefuse): \App\Entity\Holiday
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateRefuse', [$dateRefuse]);

        return parent::setDateRefuse($dateRefuse);
    }

    /**
     * {@inheritDoc}
     */
    public function getFkUserRefuse(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFkUserRefuse', []);

        return parent::getFkUserRefuse();
    }

    /**
     * {@inheritDoc}
     */
    public function setFkUserRefuse(?int $fkUserRefuse): \App\Entity\Holiday
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFkUserRefuse', [$fkUserRefuse]);

        return parent::setFkUserRefuse($fkUserRefuse);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateCancel(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateCancel', []);

        return parent::getDateCancel();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateCancel(?\DateTimeInterface $dateCancel): \App\Entity\Holiday
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateCancel', [$dateCancel]);

        return parent::setDateCancel($dateCancel);
    }

    /**
     * {@inheritDoc}
     */
    public function getFkUserCancel(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFkUserCancel', []);

        return parent::getFkUserCancel();
    }

    /**
     * {@inheritDoc}
     */
    public function setFkUserCancel(?int $fkUserCancel): \App\Entity\Holiday
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFkUserCancel', [$fkUserCancel]);

        return parent::setFkUserCancel($fkUserCancel);
    }

    /**
     * {@inheritDoc}
     */
    public function getDetailRefuse(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDetailRefuse', []);

        return parent::getDetailRefuse();
    }

    /**
     * {@inheritDoc}
     */
    public function setDetailRefuse(?string $detailRefuse): \App\Entity\Holiday
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDetailRefuse', [$detailRefuse]);

        return parent::setDetailRefuse($detailRefuse);
    }

    /**
     * {@inheritDoc}
     */
    public function getNotePrivate(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotePrivate', []);

        return parent::getNotePrivate();
    }

    /**
     * {@inheritDoc}
     */
    public function setNotePrivate(?string $notePrivate): \App\Entity\Holiday
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNotePrivate', [$notePrivate]);

        return parent::setNotePrivate($notePrivate);
    }

    /**
     * {@inheritDoc}
     */
    public function getNotePublic(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotePublic', []);

        return parent::getNotePublic();
    }

    /**
     * {@inheritDoc}
     */
    public function setNotePublic(?string $notePublic): \App\Entity\Holiday
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNotePublic', [$notePublic]);

        return parent::setNotePublic($notePublic);
    }

    /**
     * {@inheritDoc}
     */
    public function getTms(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTms', []);

        return parent::getTms();
    }

    /**
     * {@inheritDoc}
     */
    public function setTms(\DateTimeInterface $tms): \App\Entity\Holiday
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTms', [$tms]);

        return parent::setTms($tms);
    }

    /**
     * {@inheritDoc}
     */
    public function getVue(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVue', []);

        return parent::getVue();
    }

    /**
     * {@inheritDoc}
     */
    public function setVue(?int $vue): \App\Entity\Holiday
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVue', [$vue]);

        return parent::setVue($vue);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateDernierRetardement(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateDernierRetardement', []);

        return parent::getDateDernierRetardement();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateDernierRetardement(?\DateTimeInterface $dateDernierRetardement): \App\Entity\Holiday
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateDernierRetardement', [$dateDernierRetardement]);

        return parent::setDateDernierRetardement($dateDernierRetardement);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbRetartement(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbRetartement', []);

        return parent::getNbRetartement();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbRetartement(?int $nbRetartement): \App\Entity\Holiday
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbRetartement', [$nbRetartement]);

        return parent::setNbRetartement($nbRetartement);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbDays(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbDays', []);

        return parent::getNbDays();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbDays(?float $nbDays): \App\Entity\Holiday
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbDays', [$nbDays]);

        return parent::setNbDays($nbDays);
    }

}
